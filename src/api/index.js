const { find, findOne, findUsers, save } = require('../db')

exports.register = async (req, reply) => {
    let { user, pass } = req.body
    let result = await save({ user, pass })

    return reply.code(200).send(result)
}

exports.users = async (req, reply) => {
    // let { query } = req.query
    let result = await findUsers({})

    return reply.code(200).send(result)
}

exports.login = async (req, reply) => {
    try {
        let { user, pass } = req.body

        let result = await findOne({user, pass})

        return reply.code(200).send(result)
    } catch (e) {
        return reply.code(500).send({ success: false, result: 'user/pass not found' })
    }
}

exports.loginProtected = async (req, reply) => {
    try {
        let { user, pass } = req.body
        await isObject({ user, pass })

        let result = await findOne({user, pass})

        return reply.code(200).send(result)
    } catch (e) {
        return reply.code(500).send({ success: false, result: 'user/pass not found' })
    }
}

async function isObject(params) {
    return new Promise((resolve, reject) => {
        Object.keys(params).forEach((v, i) => {
            if (typeof params[v] === 'object') return reject(false)
        })
        resolve(true)
    })
}